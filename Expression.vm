function Expression.new 4
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 10
call DStack.new 1
pop this 0
push constant 30
call ArrayExtension.zeros 1
pop this 1
push constant 0
pop local 1
push constant 30
call ArrayExtension.zeros 1
pop this 2
push constant 0
pop local 2
push constant 15
call String.new 1
pop local 0
label WHILE_EXP0
push local 2
push argument 0
call String.length 1
lt
not
if-goto WHILE_END0
push argument 0
push local 2
call String.charAt 2
pop local 3
push constant 47
push local 3
lt
push local 3
push constant 58
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 3
call String.appendChar 2
pop temp 0
push argument 0
push local 2
push constant 1
add
call String.charAt 2
pop local 3
push constant 47
push local 3
lt
push local 3
push constant 58
lt
and
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push this 1
add
push local 0
call Decimal.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 15
call String.new 1
pop local 0
push local 1
push this 2
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE1
label IF_FALSE0
push local 3
push constant 43
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push this 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push this 2
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE2
push local 3
push constant 45
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push this 1
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push this 2
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE3
push local 3
push constant 42
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
push this 1
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push this 2
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE4
push local 3
push constant 94
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 1
push this 1
add
push constant 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push this 2
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE5
push local 3
push constant 88
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 1
push this 2
add
push constant 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE6
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push local 1
lt
not
if-goto WHILE_END1
push local 1
push this 1
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
push constant 1
call String.new 1
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push pointer 0
return
function Expression.eval 4
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 0
gt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push local 0
push this 1
add
pop pointer 1
push that 0
call DStack.Push 2
pop temp 0
label IF_FALSE0
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
call DStack.Pop 1
pop local 2
push this 0
call DStack.Pop 1
pop local 1
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push local 2
call Decimal.add 2
pop local 3
label IF_FALSE2
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push local 2
call Decimal.sub 2
pop local 3
label IF_FALSE3
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
push local 2
call Decimal.mult 2
pop local 3
label IF_FALSE4
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 3
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 1
push local 2
call Decimal.toInt 1
call Decimal.pow 2
pop local 3
label IF_FALSE5
push this 0
push local 3
call DStack.Push 2
pop temp 0
label IF_FALSE1
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 3
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 0
push argument 1
call DStack.Push 2
pop temp 0
label IF_FALSE6
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call DStack.Pop 1
return
